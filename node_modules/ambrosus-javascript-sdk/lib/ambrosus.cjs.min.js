/* Ambrosus Javascript SDK v2.0.4 */'use strict';function _interopDefault(a){return a&&'object'==typeof a&&'default'in a?a['default']:a}var Web3=_interopDefault(require('web3'));const handleResponse=a=>new Promise((b,c)=>{const d={status:a.status,data:null,message:JSON.parse(a.response).reason};(200===a.status||201===a.status)&&(d.data=JSON.parse(a.response),d.message='success',b(d)),c(d)}),rejectResponse=a=>({status:400,data:null,message:a}),successResponse=a=>({status:200,data:a,message:'success'}),web3=new Web3,fromWei=(a,b='ether')=>web3.utils.fromWei(a,b),toWei=(a,b='ether')=>web3.utils.toWei(a,b),isAddress=a=>web3.utils.isAddress(a),randomHex=a=>web3.utils.randomHex(a),toHex=a=>web3.utils.toHex(a),calculateHash=a=>a?hashMessage(serializeForHashing(a)):rejectResponse('Please provide some data'),hashMessage=a=>web3.eth.accounts.hashMessage(a),serializeForHashing=a=>{if((a=>'object'==typeof a&&!Array.isArray(a))(a)){const b=Object.keys(a).sort().map(b=>`"${b}":${serializeForHashing(a[b])}`).join(',');return`{${b}}`}if((a=>Array.isArray(a))(a)){const b=a.map(a=>serializeForHashing(a)).join(',');return`[${b}]`}return(a=>'string'==typeof a)(a)?`"${a}"`:a.toString()},fs=require('fs'),path=require('path'),readFile=a=>new Promise((b,c)=>{fs.readFile(a,'utf8',(a,d)=>{a?c(a):b(d)})}),timeSince=a=>{var b=Math.floor;try{let c=b((+new Date-a)/1e3),d=b(c/31536e3);return 1<=d?d+' year'+(1<d?'s':''):(d=b(c/2592e3),1<=d)?d+' month'+(1<d?'s':''):(d=b(c/86400),1<=d)?d+' day'+(1<d?'s':''):(d=b(c/3600),1<=d)?d+' hour'+(1<d?'s':''):(d=b(c/60),1<=d)?d+' minute'+(1<d?'s':''):(c=1>c?1:c,b(c)+' second'+(1===c?'':'s'))}catch(a){return''}},validTimestamp=a=>0<new Date(a).getTime(),checkAccessLevel=a=>{try{return a.content.idData.accessLevel}catch(a){return 0}},getName=(a,b='No title')=>{try{const b=a.name;let c=a.type.split('.');return c=c[c.length-1],[b,c].find(a=>a)}catch(a){return b}},getImage=a=>{try{return a.images.default.url}catch(a){return''}},getLocation=a=>{const b=a.location||a,{city:c,country:d,name:e}=b;return[c,d,e].filter(a=>!!a).join(', ')||'No place attached'},sortEventsByTimestamp=(c,a)=>c.timestamp>a.timestamp?-1:c.timestamp<a.timestamp?1:0,parseEvent=a=>(a.info={},a.info.groups=[],a.info.properties=[],a.content.data&&Array.isArray(a.content.data)&&a.content.data.map(b=>{const c=b.type.split('.');return b.type=c[c.length-1].toLowerCase(),'location'===b.type||'identifiers'===b.type?a.info[b.type]=b:(a.info.name=b.name||b.type,Object.keys(b).map(c=>{if(-1<['images','documents','description'].indexOf(c)&&(a.info[c]=b[c]),-1===['type','name','assetType','eventId','createdBy','timestamp','location','images','documents','description','identifiers','groups','properties'].indexOf(c)){const d={key:c,value:b[c]};a.info['string'==typeof d.value||Array.isArray(d.value)?'properties':'groups'].push(d)}})),b}),a),parseAsset=a=>{a.info||(a.info={}),a.info.groups=[],a.info.properties=[],Object.keys(a.info).map(b=>{if('location'===b||'identifiers'===b)a[b]=a.info[b];else if(-1===['type','name','assetType','images','eventId','createdBy','timestamp','groups','properties'].indexOf(b)){const c={key:b,value:a.info[b]};a.info['string'==typeof c.value||Array.isArray(c.value)?'properties':'groups'].push(c)}})},parseTimelineEvents=a=>{const b=a.reduce((a,{content:b,eventId:c})=>{const d=b.idData.timestamp,e=b.idData.createdBy;return b&&b.data&&b.data.map(f=>{const g=f.type.split('.'),h=g[g.length-1],i=g[g.length-2]||'asset',j=timeSince(1e3*d);f.timestamp=d,f.createdBy=e,f.name=f.name||h,f.type=h,f.eventId=c,f.ago=j,'location'===f.type&&'event'===i&&b.data.reduce((a,b)=>{'location'!==b.type&&(b.location=a)},f);return-1===['location','identifier','identifiers'].indexOf(f.type)&&a.push(f),f}),a},[]);return b.sort(sortEventsByTimestamp),b},isLatest=a=>-1===['info','redirection','identifiers','branding','location'].indexOf(a),findEvent=(a,b)=>{let c=!1;return b.map(b=>(b.content.data&&b.content.data.map(d=>{const e=d.type.split('.');return d.type=e[e.length-1],d.type=d.type.toLowerCase(),('location'===d.type||'identifiers'===d.type)&&b.content.data.map(a=>{-1===['location','identifiers'].indexOf(a.type)&&(a['location'===d.type?'location':'identifiers']=d)}),('latest'===a?isLatest(d.type)&&(c=d):d.type===a&&(c=d),d)}),b)),c},checkTimeStamp=a=>{let b=Math.floor(Date.now()/1e3);return a.content&&a.content.idData&&a.content.idData.timestamp&&validTimestamp(a.content.idData.timestamp)?a.content.idData.timestamp:b},parseEvents=a=>a.results.reduce((a,{content:b,eventId:c})=>{const d=b.idData.timestamp,e=b.idData.createdBy;return b&&b.data&&b.data.filter(a=>{const f=a.type.split('.'),g=f[f.length-1],h=f[f.length-2]||'asset';return a.timestamp=d,a.author=e,a.name=a.name||g,a.action=g,a.type=g,a.eventId=c,('location'===a.type||'identifiers'===a.type)&&'event'===h?void b.data.reduce((b,c)=>('location'===a.type&&'location'!==c.type&&(c.location=b),'identifiers'===a.type&&'identifiers'!==c.type&&(c.identifiers=b),b),a):a}).map(b=>{-1<['info','redirection','identifiers','branding'].indexOf(b.type)?(!a[b.type]||a[b.type].timestamp<b.timestamp)&&(a[b.type]=b):a.events.push(b)}),a},{events:[]});function isObject(a){return null!==a&&'object'==typeof a&&a instanceof Object&&!(a instanceof Array)}const getUrlName=a=>{let b=a.split('/');return b=b[b.length-1],b},serializeParams=a=>{let b='';for(let c in a)''!=b&&(b+='&'),b+=c+'='+encodeURIComponent(a[c]);return b},utf8Encode=a=>{var b=String.fromCharCode;a=a.replace(/\r\n/g,'\n');let d='';for(let e,c=0;c<a.length;c++)e=a.charCodeAt(c),128>e?d+=b(e):127<e&&2048>e?(d+=b(192|e>>6),d+=b(128|63&e)):(d+=b(224|e>>12),d+=b(128|63&e>>6),d+=b(128|63&e));return d},base64url=a=>{const b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';let c,d,e,f,g,h,j,k='',l=0;for(a=utf8Encode(a);l<a.length;)c=a.charCodeAt(l++),d=a.charCodeAt(l++),e=a.charCodeAt(l++),f=c>>2,g=(3&c)<<4|d>>4,h=(15&d)<<2|e>>6,j=63&e,isNaN(d)?h=j=64:isNaN(e)&&(j=64),k=k+b.charAt(f)+b.charAt(g)+b.charAt(h)+b.charAt(j);return k};var Utils={isObject,validTimestamp,checkTimeStamp,parseEvents,serializeParams,utf8Encode,base64url,checkAccessLevel,getImage,getLocation,getName,getUrlName,sortEventsByTimestamp,parseAsset,parseEvent,isLatest,findEvent,parseTimelineEvents,timeSince,isAddress:isAddress,fromWei:fromWei,toWei:toWei,toHex:toHex,randomHex:randomHex,hashMessage:hashMessage,calculateHash:calculateHash,serializeForHashing:serializeForHashing,readFile:readFile};function getRequest(a,b,c){return new Promise((d,e)=>{let f=new XMLHttpRequest;if(f.open('GET',`${a}${Utils.serializeParams(c)}`,!0),b)for(const a in b)f.setRequestHeader(`${a}`,`${b[a]}`);f.onload=()=>{handleResponse(f).then(a=>d(a)).catch(a=>e(a))},f.send()})}function postRequest(a,b,c){return new Promise((d,e)=>{let f=new XMLHttpRequest;if(f.open('POST',a,!0),f.setRequestHeader('Content-type','application/json; charset=utf-8'),b)for(const a in b)f.setRequestHeader(`${a}`,`${b[a]}`);f.onload=()=>{handleResponse(f).then(a=>d(a)).catch(a=>e(a))},f.send(JSON.stringify(c))})}class EventHandler{constructor(){this.events={},this.empty=[]}on(a,b,c){return(this.events[a]=this.events[a]||[]).push([b,c]),this}off(a,b){a||(this.events={});let c=this.events[a]||this.empty,d=c.length=b?c.length:0;for(;d--;)b===c[d][0]&&c.splice(d,1);return this}emit(a){let b,c=this.events[a]||this.empty,d=0<c.length?c.slice(0,c.length):c,e=0;for(;b=d[e++];)b[0].apply(b[1],this.empty.slice.call(arguments,1));return this}}class Events{constructor(a,b){this._settings=a,this.service=b,this.eventHandler=new EventHandler}getAssetEvents(a){return new Promise((b,c)=>a?void getRequest(`${this._settings.apiEndpoint}/event2/list/?assteId=${encodeURIComponent(a)}`,this._settings.headers).then(a=>b(a)).catch(a=>c(a)):c(rejectResponse('Asset ID is missing.')))}getEvents(a){return new Promise((b,c)=>{getRequest(`${this._settings.apiEndpoint}/event2/list?${Utils.serializeParams(a)}`,this._settings.headers).then(a=>b(a)).catch(a=>c(a))})}createSingleEvent(a,b,c){return console.log(`createSingleEvent.eventId: ${b}`),new Promise((a,d)=>{postRequest(`${this._settings.apiEndpoint}/event2/create/${b}`,this._settings.headers,c).then(b=>a(b)).catch(a=>d(a))})}createEvent(a,b){return new Promise((c,d)=>{if('object'!=typeof b)return d(rejectResponse('event should be a json object'));if(!this._settings.headers.Authorization)return d(rejectResponse('Authorization header is required to create an event'));if(!a)return d(rejectResponse('Asset ID is missing.'));if(!b)return d(rejectResponse('Event data is missing.'));let e={};if(b.content&&b.content.data){const c={assetId:a,timestamp:Utils.checkTimeStamp(b),accessLevel:Utils.checkAccessLevel(b),createdBy:this._settings.address,dataHash:Utils.calculateHash(b.content.data)};e={content:{idData:c,signature:this.service.sign(c,this._settings.secret),data:b.content.data}}}else return d(rejectResponse('Invalid data: No content found at content.data.'));let f=Utils.calculateHash(e.content);return this.createSingleEvent(a,f,e).then(a=>{this.eventHandler.emit('event:created'),c(a)}).catch(a=>d(a))})}parseEvents(a){return new Promise((b,c)=>a&&a.results?b(successResponse(Utils.parseEvents(a))):c(rejectResponse('Results array is missing.')))}}class Assets{constructor(a,b){this._settings=a,this.service=b,this.events=new Events(this._settings,this.service),this.eventHandler=new EventHandler}getAsset(a){return new Promise((b,c)=>a?void(a.assetId&&(a=a.assetId),getRequest(`${this._settings.apiEndpoint}/asset2/info/${encodeURIComponent(a)}`,this._settings.headers).then(a=>b(a)).catch(a=>c(a))):c(rejectResponse('Asset ID is missing.')))}getAssets(a={}){return new Promise((b,c)=>{getRequest(`${this._settings.apiEndpoint}/asset2/list?${Utils.serializeParams(a)}`,this._settings.headers).then(a=>b(a)).catch(a=>c(a))})}createAsset(a={},b=[]){let c=0;return new Promise((d,e)=>{if('object'!=typeof a)return e(rejectResponse('asset should be a json object or empty'));if(!this._settings.headers.Authorization)return e(rejectResponse('Authorization header is required to create an asset'));const f={timestamp:Utils.checkTimeStamp(a),sequenceNumber:c=(c+1)%1e6,createdBy:this._settings.address},g={content:{idData:f,signature:this.service.sign(f,this._settings.secret)}};let h=Utils.calculateHash(g.content);postRequest(`${this._settings.apiEndpoint}/asset2/create/${h}`,this._settings.headers,g).then(async a=>{if(b.length){const c=b.map(b=>this.events.createEvent(a.data.assetId,b));await Promise.all(c),this.eventHandler.emit('asset:created'),d(a)}else this.eventHandler.emit('asset:created'),d(a)}).catch(a=>e(a))})}}class Accounts{constructor(a){this._settings=a}addAccount(a){return new Promise((b,c)=>{if(!this._settings.headers.Authorization)return c(rejectResponse('Authorization header is required to create an account'));return a?void postRequest(`${this._settings.apiEndpoint}/accounts`,this._settings.headers,a).then(a=>b(a)).catch(a=>c(a)):c(rejectResponse('Create account params are required to create an account.'))})}}class Bundles{constructor(a){this._settings=a}getBundle(a){return new Promise((b,c)=>a?void(a.bundleId&&(a=a.bundleId),getRequest(`${this._settings.apiEndpoint}/bundle2/info/${encodeURIComponent(a)}`,this._settings.headers).then(a=>b(a)).catch(a=>c(a))):c(rejectResponse('Bundle ID is missing.')))}}class Transactions{constructor(a,b,c){this._settings=a,this.web3=c,this.service=b}getBalance(a=null){return new Promise((b,c)=>{const d=a||this._settings.address;return this._settings.rpcURL?d?void this.web3.eth.getBalance(d).then(a=>b(a)).catch(a=>c(a)):c(rejectResponse('Address is required to get the balance')):c(rejectResponse('RPC URL is required to get the balance'))})}getTransaction(a){return new Promise((b,c)=>this._settings.rpcURL?a?this.web3.eth.getTransaction(a).then(a=>b(a)).catch(a=>c(a)):c(rejectResponse('Transaction hash is required')):c(rejectResponse('RPC URL is required')))}getTransactionRecepit(a){return new Promise((b,c)=>this._settings.rpcURL?a?this.web3.eth.getTransactionReceipt(a).then(a=>b(a)).catch(a=>c(a)):c(rejectResponse('Transaction hash is required')):c(rejectResponse('RPC URL is required')))}getTransactionCount(a=null){return new Promise((b,c)=>{const d=a||this._settings.address;return this._settings.rpcURL?d?this.web3.eth.getTransactionCount(d).then(a=>b(a)).catch(a=>c(a)):c(rejectResponse('Address is required to get the transaction count')):c(rejectResponse('RPC URL is required'))})}sendTransaction(a,b,c=null){return new Promise((d,e)=>{if(!this._settings.secret&&!this._settings.rpcURL)return e(rejectResponse('Secret key and RPC URL is required to make a transaction'));const f={to:a,from:this._settings.address,value:this.web3.utils.toHex(this.web3.utils.toWei(b,'ether')),gas:this.web3.utils.toHex(21e3),gasPrice:this.web3.utils.toHex(this.web3.utils.toWei('10','gwei'))};c&&(f.data=c);const g=this.service.getAccount(this._settings.secret),h=g.signTransaction(f);h.then(a=>{this.web3.eth.sendSignedTransaction(a.rawTransaction).then(a=>d(a)).catch(a=>e(a))}).catch(a=>{e(a)})})}}class Service{constructor(a,b,c){this._settings=a,this.web3=b,this.events=c,this.events=new Events(this._settings)}getAccount(a=null){const b=a||this._settings.secret;return b?this.web3.eth.accounts.privateKeyToAccount(b):rejectResponse('Secret key is required generate the account')}getAddress(a=null){const b=a||this._settings.secret;return b?this.web3.eth.accounts.privateKeyToAccount(b).address:rejectResponse('Secret key is required generate the address')}sign(a={},b=null){const c=b||this._settings.secret;return c?this.web3.eth.accounts.sign(Utils.serializeForHashing(a),c).signature:rejectResponse('Secret key is required to perform signature')}getPkPair(){return this.web3.eth.accounts.create(this.web3.utils.randomHex(32))}encryptPrivateKey(a,b=null){const c=b||this._settings.secret;if(!c)return rejectResponse('Secret key is required generate a signature');return a?this.web3.eth.accounts.encrypt(c,a):rejectResponse('Token is required to encrypt the data')}decryptPrivateKey(a,b){try{const{address:c,privateKey:d}=this.web3.eth.accounts.decrypt(a,b);return[c,d]}catch(a){return[null]}}verifyEvents(a){return new Promise((b,c)=>a?void this.events.getAssetEvents(a).then(c=>{console.log(`verifyEvents: assetId ${a}, events ${c.data.data.length}`);for(let a=0;a<c.data.data.length;a++){const{idData:d,signature:e,data:f}=c.data.data[a].content;b(this.verify(d,e,f,c.data.data[a].eventId))}}).catch(a=>{c(a)}):c(rejectResponse('Asset ID is required')))}verify(a,b,c,d){let e=!0;const f=Utils.calculateHash(c);a.dataHash!==f&&(e=!1,verifyObject.hash=!1);const g=this.web3.eth.accounts.recover(Utils.serializeForHashing(a),b);a.createdBy!==g&&(e=!1,verifyObject.createdBy=!1);const h=Utils.calculateHash({idData:a,data:c,signature:b});return d!==h&&(e=!1,verifyObject.eventId=!1),{flag:e,verified:{hash:!0,createdBy:!0,eventId:!0}}}isRPCValid(a){const b=new Web3(a);return b.eth.net.isListening().then(()=>!0).catch(()=>!1)}}class Blocks{constructor(a,b){this._settings=a,this.web3=b}getBlock(a){return new Promise((b,c)=>this._settings.rpcURL?a?this.web3.eth.getBlock(a).then(a=>b(a)).catch(a=>c(a)):c(rejectResponse('Block Number is required')):c(rejectResponse('RPC URL is required')))}getLatestBlock(){return new Promise((a,b)=>this._settings.rpcURL?void this.web3.eth.getBlockNumber().then(c=>this.web3.eth.getBlock(c).then(b=>a(b)).catch(a=>b(a))).catch(a=>b(a)):b(rejectResponse('RPC URL is required')))}}const DEFAULT_GAS=47e5;class Contracts{constructor(a,b){this._settings=a,this.web3=b}loadContract(a,b){return this._settings.rpcURL?this.web3.eth.Contract(a,b,{gas:DEFAULT_GAS,gasPrice:this.web3.utils.toWei('5','gwei')}):rejectResponse('RPC URL is required')}}class AmbrosusSDK{static get utils(){return Utils}constructor(a={}){if(this.web3=new Web3,this._settings={headers:{}},Utils.isObject(a)){if(Object.keys(a).map(b=>{this._settings[b]=a[b]}),this._settings.rpcURL&&(this.web3=new Web3(new Web3.providers.HttpProvider(this._settings.rpcURL))),this.service=new Service(this._settings,this.web3),this._settings.secret){this._settings.address=this.service.getAddress(this._settings.secret);const a=this.getApiToken(this._settings.secret);400!==a.status&&(this._settings.token=a)}this._settings.headers&&this._settings.headers.Authorization||!this._settings.token||(this._settings.headers=Object.assign({},this._settings.headers,{Authorization:`AMB_TOKEN ${this._settings.token}`})),this.service=new Service(this._settings,this.web3),this.assets=new Assets(this._settings,this.service),this.events=new Events(this._settings,this.service),this.bundles=new Bundles(this._settings),this.accounts=new Accounts(this._settings),this.contracts=new Contracts(this._settings,this.web3),this.transactions=new Transactions(this._settings,this.service,this.web3),this.blocks=new Blocks(this._settings,this.web3),this.utils=Utils}else return rejectResponse('SDK Init parameters should be an object')}getApiToken(a=null,b){if(!a&&!this._settings.secret)return rejectResponse('Secret key is required generate the token');const c=a||this._settings.secret,d={createdBy:this.service.getAddress(c),validUntil:b||Math.floor(Date.now()/1e3)+300};return Utils.base64url(Utils.serializeForHashing({signature:this.service.sign(d,c),idData:d}))}}module.exports=AmbrosusSDK;
//# sourceMappingURL=ambrosus.cjs.min.js.map
