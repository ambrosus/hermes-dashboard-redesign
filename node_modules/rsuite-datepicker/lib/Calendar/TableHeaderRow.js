'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _utils = require('rsuite-utils/lib/utils');

var _Picker = require('rsuite-utils/lib/Picker');

var _rsuiteIntl = require('rsuite-intl');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var weekKeys = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];

var TableHeaderRow = function (_React$PureComponent) {
  _inherits(TableHeaderRow, _React$PureComponent);

  function TableHeaderRow() {
    _classCallCheck(this, TableHeaderRow);

    return _possibleConstructorReturn(this, (TableHeaderRow.__proto__ || Object.getPrototypeOf(TableHeaderRow)).apply(this, arguments));
  }

  _createClass(TableHeaderRow, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          className = _props.className,
          classPrefix = _props.classPrefix,
          isoWeek = _props.isoWeek,
          props = _objectWithoutProperties(_props, ['className', 'classPrefix', 'isoWeek']);

      var addPrefix = (0, _utils.prefix)(classPrefix);
      var classes = (0, _classnames2.default)(addPrefix('row'), addPrefix('header-row'), className);
      var items = weekKeys;
      if (isoWeek) {
        items = weekKeys.filter(function (v, k) {
          return k > 0;
        });
        items.push('sunday');
      }

      return React.createElement(
        'div',
        _extends({}, props, { className: classes }),
        items.map(function (key) {
          return React.createElement(
            'div',
            { key: key, className: addPrefix('cell') },
            React.createElement(
              'span',
              { className: addPrefix('cell-content') },
              React.createElement(_rsuiteIntl.FormattedMessage, { id: key })
            )
          );
        })
      );
    }
  }]);

  return TableHeaderRow;
}(React.PureComponent);

TableHeaderRow.defaultProps = {
  classPrefix: _Picker.constants.namespace + '-calendar-table'
};
TableHeaderRow.handledProps = ['className', 'classPrefix', 'isoWeek'];
TableHeaderRow.propTypes = {
  isoWeek: _propTypes2.default.bool,
  className: _propTypes2.default.string,
  classPrefix: _propTypes2.default.string
};
exports.default = TableHeaderRow;