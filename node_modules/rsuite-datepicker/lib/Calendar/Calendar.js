'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _pick2 = require('lodash/pick');

var _pick3 = _interopRequireDefault(_pick2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _utils = require('rsuite-utils/lib/utils');

var _Picker = require('rsuite-utils/lib/Picker');

var _MonthDropdown = require('./MonthDropdown');

var _MonthDropdown2 = _interopRequireDefault(_MonthDropdown);

var _TimeDropdown = require('./TimeDropdown');

var _TimeDropdown2 = _interopRequireDefault(_TimeDropdown);

var _View = require('./View');

var _View2 = _interopRequireDefault(_View);

var _Header = require('./Header');

var _Header2 = _interopRequireDefault(_Header);

var _disabledTime = require('../utils/disabledTime');

var _disabledTime2 = _interopRequireDefault(_disabledTime);

var _formatUtils = require('../utils/formatUtils');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var namespace = _Picker.constants.namespace;

var Calendar = function (_React$PureComponent) {
  _inherits(Calendar, _React$PureComponent);

  function Calendar() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Calendar);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Calendar.__proto__ || Object.getPrototypeOf(Calendar)).call.apply(_ref, [this].concat(args))), _this), _this.disabledDate = function (date) {
      var disabledDate = _this.props.disabledDate;

      if (disabledDate && disabledDate(date)) {
        return true;
      }
      return false;
    }, _this.disabledTime = function (date) {
      return (0, _disabledTime2.default)(_this.props, date);
    }, _this.handleMoveForword = function () {
      var _this$props = _this.props,
          onMoveForword = _this$props.onMoveForword,
          pageDate = _this$props.pageDate;

      onMoveForword && onMoveForword(pageDate.clone().add(1, 'month'));
    }, _this.handleMoveBackward = function () {
      var _this$props2 = _this.props,
          onMoveBackward = _this$props2.onMoveBackward,
          pageDate = _this$props2.pageDate;

      onMoveBackward && onMoveBackward(pageDate.clone().add(-1, 'month'));
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Calendar, [{
    key: 'render',
    value: function render() {
      var _classNames;

      var _props = this.props,
          calendarState = _props.calendarState,
          pageDate = _props.pageDate,
          onSelect = _props.onSelect,
          onToggleMonthDropdown = _props.onToggleMonthDropdown,
          onToggleTimeDropdown = _props.onToggleTimeDropdown,
          onChangePageDate = _props.onChangePageDate,
          onChangePageTime = _props.onChangePageTime,
          format = _props.format,
          calendarRef = _props.calendarRef,
          className = _props.className,
          isoWeek = _props.isoWeek,
          limitStartYear = _props.limitStartYear,
          limitEndYear = _props.limitEndYear,
          classPrefix = _props.classPrefix,
          rest = _objectWithoutProperties(_props, ['calendarState', 'pageDate', 'onSelect', 'onToggleMonthDropdown', 'onToggleTimeDropdown', 'onChangePageDate', 'onChangePageTime', 'format', 'calendarRef', 'className', 'isoWeek', 'limitStartYear', 'limitEndYear', 'classPrefix']);

      var showDate = (0, _formatUtils.shouldDate)(format);
      var showTime = (0, _formatUtils.shouldTime)(format);
      var showMonth = (0, _formatUtils.shouldMonth)(format);

      var onlyShowTime = showTime && !showDate && !showMonth;
      var onlyShowMonth = showMonth && !showDate && !showTime;
      var dropTime = calendarState === 'DROP_TIME' || onlyShowTime;
      var dropMonth = calendarState === 'DROP_MONTH' || onlyShowMonth;
      var addPrefix = (0, _utils.prefix)(classPrefix);

      var calendarClasses = (0, _classnames2.default)(classPrefix, className, (_classNames = {}, _defineProperty(_classNames, addPrefix('show-time-dropdown'), dropTime), _defineProperty(_classNames, addPrefix('show-month-dropdown'), dropMonth), _classNames));

      var unhandled = (0, _utils.getUnhandledProps)(Calendar, rest);
      var timeDropdownProps = (0, _pick3.default)(rest, _disabledTime.calendarOnlyProps);
      return React.createElement(
        'div',
        _extends({}, unhandled, { className: calendarClasses, ref: calendarRef }),
        React.createElement(_Header2.default, {
          date: pageDate,
          format: format,
          showMonth: showMonth,
          showDate: showDate,
          showTime: showTime,
          disabledDate: this.disabledDate,
          disabledTime: this.disabledTime,
          onMoveForword: this.handleMoveForword,
          onMoveBackward: this.handleMoveBackward,
          onToggleMonthDropdown: onToggleMonthDropdown,
          onToggleTimeDropdown: onToggleTimeDropdown
        }),
        showDate && React.createElement(_View2.default, {
          key: 'MonthView',
          activeDate: pageDate,
          onSelect: onSelect,
          isoWeek: isoWeek,
          disabledDate: this.disabledDate
        }),
        showMonth && React.createElement(_MonthDropdown2.default, {
          date: pageDate,
          onSelect: onChangePageDate,
          show: dropMonth,
          limitStartYear: limitStartYear,
          limitEndYear: limitEndYear
        }),
        showTime && React.createElement(_TimeDropdown2.default, _extends({}, timeDropdownProps, {
          date: pageDate,
          format: format,
          show: dropTime,
          onSelect: onChangePageTime
        }))
      );
    }
  }]);

  return Calendar;
}(React.PureComponent);

Calendar.defaultProps = {
  classPrefix: namespace + '-calendar'
};
Calendar.handledProps = ['calendarRef', 'calendarState', 'className', 'classPrefix', 'disabledDate', 'disabledHours', 'disabledMinutes', 'disabledSeconds', 'format', 'hideHours', 'hideMinutes', 'hideSeconds', 'isoWeek', 'limitEndYear', 'limitStartYear', 'onChangePageDate', 'onChangePageTime', 'onMoveBackward', 'onMoveForword', 'onSelect', 'onToggleMonthDropdown', 'onToggleTimeDropdown', 'pageDate'];
Calendar.propTypes = {
  pageDate: function pageDate() {
    return (typeof moment$Moment === 'function' ? _propTypes2.default.instanceOf(moment$Moment).isRequired : _propTypes2.default.any.isRequired).apply(this, arguments);
  },
  disabledDate: _propTypes2.default.func,
  disabledHours: _propTypes2.default.func,
  disabledMinutes: _propTypes2.default.func,
  disabledSeconds: _propTypes2.default.func,
  hideHours: _propTypes2.default.func,
  hideMinutes: _propTypes2.default.func,
  hideSeconds: _propTypes2.default.func,
  calendarState: _propTypes2.default.oneOf(['DROP_MONTH', 'DROP_TIME']),
  onMoveForword: _propTypes2.default.func,
  onMoveBackward: _propTypes2.default.func,
  onSelect: _propTypes2.default.func,
  onToggleMonthDropdown: _propTypes2.default.func,
  onToggleTimeDropdown: _propTypes2.default.func,
  onChangePageDate: _propTypes2.default.func,
  onChangePageTime: _propTypes2.default.func,
  calendarRef: function calendarRef() {
    return (typeof (React.ElementRef == null ? {} : React.ElementRef) === 'function' ? _propTypes2.default.instanceOf(React.ElementRef == null ? {} : React.ElementRef) : _propTypes2.default.any).apply(this, arguments);
  },
  format: _propTypes2.default.string,
  isoWeek: _propTypes2.default.bool,
  limitStartYear: _propTypes2.default.number,
  limitEndYear: _propTypes2.default.number,
  className: _propTypes2.default.string,
  classPrefix: _propTypes2.default.string
};
exports.default = Calendar;