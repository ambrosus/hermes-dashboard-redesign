'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _Picker = require('rsuite-utils/lib/Picker');

var _TableRow = require('./TableRow');

var _TableRow2 = _interopRequireDefault(_TableRow);

var _TableHeaderRow = require('./TableHeaderRow');

var _TableHeaderRow2 = _interopRequireDefault(_TableHeaderRow);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Table = function (_React$PureComponent) {
  _inherits(Table, _React$PureComponent);

  function Table() {
    _classCallCheck(this, Table);

    return _possibleConstructorReturn(this, (Table.__proto__ || Object.getPrototypeOf(Table)).apply(this, arguments));
  }

  _createClass(Table, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          rows = _props.rows,
          selected = _props.selected,
          onSelect = _props.onSelect,
          disabledDate = _props.disabledDate,
          inSameMonth = _props.inSameMonth,
          className = _props.className,
          classPrefix = _props.classPrefix,
          isoWeek = _props.isoWeek,
          rest = _objectWithoutProperties(_props, ['rows', 'selected', 'onSelect', 'disabledDate', 'inSameMonth', 'className', 'classPrefix', 'isoWeek']);

      var classes = (0, _classnames2.default)(classPrefix, className);

      return React.createElement(
        'div',
        _extends({}, rest, { className: classes }),
        React.createElement(_TableHeaderRow2.default, { isoWeek: isoWeek }),
        rows.map(function (week, index) {
          return React.createElement(_TableRow2.default
          /* eslint-disable */
          , { key: index,
            weekendDate: week,
            selected: selected,
            onSelect: onSelect,
            inSameMonth: inSameMonth,
            disabledDate: disabledDate
          });
        })
      );
    }
  }]);

  return Table;
}(React.PureComponent);

Table.defaultProps = {
  classPrefix: _Picker.constants.namespace + '-calendar-table',
  rows: []
};
Table.handledProps = ['className', 'classPrefix', 'disabledDate', 'inSameMonth', 'isoWeek', 'onSelect', 'rows', 'selected'];
Table.propTypes = {
  rows: _propTypes2.default.arrayOf(_propTypes2.default.any).isRequired,
  isoWeek: _propTypes2.default.bool,
  selected: function selected() {
    return (typeof moment$Moment === 'function' ? _propTypes2.default.instanceOf(moment$Moment) : _propTypes2.default.any).apply(this, arguments);
  },
  onSelect: _propTypes2.default.func,
  disabledDate: _propTypes2.default.func,
  inSameMonth: _propTypes2.default.func,
  className: _propTypes2.default.string,
  classPrefix: _propTypes2.default.string
};
exports.default = Table;