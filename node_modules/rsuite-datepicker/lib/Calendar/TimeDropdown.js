'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _camelCase2 = require('lodash/camelCase');

var _camelCase3 = _interopRequireDefault(_camelCase2);

var _isNumber2 = require('lodash/isNumber');

var _isNumber3 = _interopRequireDefault(_isNumber2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _domLib = require('dom-lib');

var _rsuiteIntl = require('rsuite-intl');

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _utils = require('rsuite-utils/lib/utils');

var _Picker = require('rsuite-utils/lib/Picker');

var _scrollTopAnimation = require('../utils/scrollTopAnimation');

var _scrollTopAnimation2 = _interopRequireDefault(_scrollTopAnimation);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ranges = {
  hours: { start: 0, end: 23 },
  minutes: { start: 0, end: 59 },
  seconds: { start: 0, end: 59 }
};

var TimeDropdown = function (_React$PureComponent) {
  _inherits(TimeDropdown, _React$PureComponent);

  function TimeDropdown() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, TimeDropdown);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TimeDropdown.__proto__ || Object.getPrototypeOf(TimeDropdown)).call.apply(_ref, [this].concat(args))), _this), _this.container = {}, _this.content = {}, _this.scrollTo = function (time) {
      Object.entries(time).forEach(function (item) {
        var container = _this.container[item[0]];
        var node = container.querySelector('[data-key="' + item[0] + '-' + item[1] + '"]');
        if (node && container) {
          var _getPosition = (0, _domLib.getPosition)(node, container),
              top = _getPosition.top;

          (0, _scrollTopAnimation2.default)(_this.container[item[0]], top, (0, _domLib.scrollTop)(_this.container[item[0]]) !== 0);
        }
      });
    }, _this.handleClick = function (type, d, event) {
      var _this$props = _this.props,
          onSelect = _this$props.onSelect,
          date = _this$props.date;
      // $FlowFixMe

      var nextDate = (0, _moment2.default)(date)[type](d);
      onSelect && onSelect(nextDate, event);
    }, _this.addPrefix = function (name) {
      return (0, _utils.prefix)(_this.props.classPrefix)(name);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(TimeDropdown, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.updatePosition();
    }
  }, {
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps) {
      return nextProps.show;
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this.updatePosition();
    }
  }, {
    key: 'getTime',
    value: function getTime(props) {
      var _ref2 = props || this.props,
          format = _ref2.format,
          date = _ref2.date;

      var time = date || (0, _moment2.default)();
      var nextTime = {};

      if (!format) {
        return nextTime;
      }

      if (/(H|h)/.test(format)) {
        nextTime.hours = time.hours();
      }
      if (/m/.test(format)) {
        nextTime.minutes = time.minutes();
      }
      if (/s/.test(format)) {
        nextTime.seconds = time.seconds();
      }
      return nextTime;
    }
  }, {
    key: 'updatePosition',
    value: function updatePosition(props) {
      var _ref3 = props || this.props,
          show = _ref3.show;

      var time = this.getTime(props);
      show && this.scrollTo(time);
    }
  }, {
    key: 'renderColumn',
    value: function renderColumn(type, active) {
      var _this2 = this;

      if (!(0, _isNumber3.default)(active)) {
        return null;
      }
      var date = this.props.date;
      var _ranges$type = ranges[type],
          start = _ranges$type.start,
          end = _ranges$type.end;

      var items = [];

      var hideFunc = this.props[(0, _camelCase3.default)('hide_' + type)];
      var disabledFunc = this.props[(0, _camelCase3.default)('disabled_' + type)];

      var _loop = function _loop(i) {
        if (!(hideFunc && hideFunc(i, date))) {
          var _classNames;

          var disabled = disabledFunc && disabledFunc(i, date);
          var itemClasses = (0, _classnames2.default)(_this2.addPrefix('cell'), (_classNames = {}, _defineProperty(_classNames, _this2.addPrefix('cell-active'), active === i), _defineProperty(_classNames, _this2.addPrefix('cell-disabled'), disabled), _classNames));

          items.push(React.createElement(
            'li',
            { key: i },
            React.createElement(
              'a',
              {
                role: 'menu',
                className: itemClasses,
                tabIndex: '-1',
                'data-key': type + '-' + i,
                onClick: function onClick(event) {
                  !disabled && _this2.handleClick(type, i, event);
                }
              },
              i
            )
          ));
        }
      };

      for (var i = start; i <= end; i += 1) {
        _loop(i);
      }

      return React.createElement(
        'div',
        { className: this.addPrefix('column') },
        React.createElement(
          'div',
          { className: this.addPrefix('column-title') },
          React.createElement(_rsuiteIntl.FormattedMessage, { id: type })
        ),
        React.createElement(
          'ul',
          {
            ref: function ref(_ref4) {
              _this2.container[type] = _ref4;
            }
          },
          items
        )
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var _props = this.props,
          className = _props.className,
          classPrefix = _props.classPrefix,
          rest = _objectWithoutProperties(_props, ['className', 'classPrefix']);

      var time = this.getTime();
      var classes = (0, _classnames2.default)(classPrefix, className);
      var unhandled = (0, _utils.getUnhandledProps)(TimeDropdown, rest);

      return React.createElement(
        'div',
        _extends({}, unhandled, { className: classes }),
        React.createElement(
          'div',
          {
            className: this.addPrefix('content'),
            ref: function ref(_ref5) {
              _this3.content = _ref5;
            }
          },
          React.createElement(
            'div',
            { className: this.addPrefix('row') },
            this.renderColumn('hours', time.hours),
            this.renderColumn('minutes', time.minutes),
            this.renderColumn('seconds', time.seconds)
          )
        )
      );
    }
  }]);

  return TimeDropdown;
}(React.PureComponent);

TimeDropdown.defaultProps = {
  classPrefix: _Picker.constants.namespace + '-calendar-time-dropdown',
  show: false,
  ranges: [{
    label: 'today',
    value: (0, _moment2.default)(),
    closeOverlay: true
  }, {
    label: 'yesterday',
    value: (0, _moment2.default)().add(-1, 'd'),
    closeOverlay: true
  }]
};
TimeDropdown.handledProps = ['className', 'classPrefix', 'date', 'disabledDate', 'disabledHours', 'disabledMinutes', 'disabledSeconds', 'format', 'hideHours', 'hideMinutes', 'hideSeconds', 'onSelect', 'ranges', 'show'];
TimeDropdown.propTypes = {
  disabledDate: _propTypes2.default.func,
  disabledHours: _propTypes2.default.func,
  disabledMinutes: _propTypes2.default.func,
  disabledSeconds: _propTypes2.default.func,
  hideHours: _propTypes2.default.func,
  hideMinutes: _propTypes2.default.func,
  hideSeconds: _propTypes2.default.func,
  date: function date() {
    return (typeof moment$Moment === 'function' ? _propTypes2.default.instanceOf(moment$Moment) : _propTypes2.default.any).apply(this, arguments);
  },
  onSelect: _propTypes2.default.func,
  show: _propTypes2.default.bool.isRequired,
  format: _propTypes2.default.string,
  className: _propTypes2.default.string,
  classPrefix: _propTypes2.default.string
};
exports.default = TimeDropdown;