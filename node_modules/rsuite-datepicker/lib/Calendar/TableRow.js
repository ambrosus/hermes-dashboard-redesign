'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _utils = require('rsuite-utils/lib/utils');

var _Picker = require('rsuite-utils/lib/Picker');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var namespace = _Picker.constants.namespace;

var TableRow = function (_React$PureComponent) {
  _inherits(TableRow, _React$PureComponent);

  function TableRow() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, TableRow);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TableRow.__proto__ || Object.getPrototypeOf(TableRow)).call.apply(_ref, [this].concat(args))), _this), _this.addPrefix = function (name) {
      return (0, _utils.prefix)(_this.props.classPrefix)(name);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(TableRow, [{
    key: 'renderDays',
    value: function renderDays() {
      var _this2 = this;

      var _props = this.props,
          weekendDate = _props.weekendDate,
          disabledDate = _props.disabledDate,
          inSameMonth = _props.inSameMonth,
          selected = _props.selected,
          onSelect = _props.onSelect;


      var days = [];

      var _loop = function _loop(i) {
        var _classNames;

        var thisDate = (0, _moment2.default)(weekendDate).add(i, 'd');
        var disabled = disabledDate && disabledDate(thisDate.clone());
        var isToday = thisDate.isSame((0, _moment2.default)(), 'date');
        var classes = (0, _classnames2.default)(_this2.addPrefix('cell'), (_classNames = {}, _defineProperty(_classNames, _this2.addPrefix('cell-un-same-month'), !(inSameMonth && inSameMonth(thisDate))), _defineProperty(_classNames, _this2.addPrefix('cell-is-today'), isToday), _defineProperty(_classNames, _this2.addPrefix('cell-selected'), thisDate.isSame(selected, 'date')), _defineProperty(_classNames, _this2.addPrefix('cell-disabled'), disabled), _classNames));

        days.push(React.createElement(
          'div',
          {
            className: classes,
            role: 'menu',
            tabIndex: '-1',
            title: isToday ? 'Today' : '',
            onClick: function onClick() {
              if (disabled) {
                return;
              }
              onSelect && onSelect(thisDate);
            },
            key: i
          },
          React.createElement(
            'span',
            { className: _this2.addPrefix('cell-content') },
            thisDate.date()
          )
        ));
      };

      for (var i = 0; i < 7; i += 1) {
        _loop(i);
      }
      return days;
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          className = _props2.className,
          rest = _objectWithoutProperties(_props2, ['className']);

      var classes = (0, _classnames2.default)(this.addPrefix('row'), className);
      var unhandled = (0, _utils.getUnhandledProps)(TableRow, rest);

      return React.createElement(
        'div',
        _extends({}, unhandled, { className: classes }),
        this.renderDays()
      );
    }
  }]);

  return TableRow;
}(React.PureComponent);

TableRow.defaultProps = {
  classPrefix: namespace + '-calendar-table',
  selected: (0, _moment2.default)()
};
TableRow.handledProps = ['className', 'classPrefix', 'disabledDate', 'inSameMonth', 'onSelect', 'selected', 'weekendDate'];
TableRow.propTypes = {
  weekendDate: function weekendDate() {
    return (typeof moment$Moment === 'function' ? _propTypes2.default.instanceOf(moment$Moment) : _propTypes2.default.any).apply(this, arguments);
  },
  selected: function selected() {
    return (typeof moment$Moment === 'function' ? _propTypes2.default.instanceOf(moment$Moment) : _propTypes2.default.any).apply(this, arguments);
  },
  onSelect: _propTypes2.default.func,
  disabledDate: _propTypes2.default.func,
  inSameMonth: _propTypes2.default.func,
  className: _propTypes2.default.string,
  classPrefix: _propTypes2.default.string
};
exports.default = TableRow;