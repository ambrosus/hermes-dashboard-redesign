{"ast":null,"code":"/**\n *\n * @namespace faker.database\n */\nvar Database = function (faker) {\n  var self = this;\n  /**\n   * column\n   *\n   * @method faker.database.column\n   */\n\n  self.column = function () {\n    return faker.random.arrayElement(faker.definitions.database.column);\n  };\n\n  self.column.schema = {\n    \"description\": \"Generates a column name.\",\n    \"sampleResults\": [\"id\", \"title\", \"createdAt\"]\n  };\n  /**\n   * type\n   *\n   * @method faker.database.type\n   */\n\n  self.type = function () {\n    return faker.random.arrayElement(faker.definitions.database.type);\n  };\n\n  self.type.schema = {\n    \"description\": \"Generates a column type.\",\n    \"sampleResults\": [\"byte\", \"int\", \"varchar\", \"timestamp\"]\n  };\n  /**\n   * collation\n   *\n   * @method faker.database.collation\n   */\n\n  self.collation = function () {\n    return faker.random.arrayElement(faker.definitions.database.collation);\n  };\n\n  self.collation.schema = {\n    \"description\": \"Generates a collation.\",\n    \"sampleResults\": [\"utf8_unicode_ci\", \"utf8_bin\"]\n  };\n  /**\n   * engine\n   *\n   * @method faker.database.engine\n   */\n\n  self.engine = function () {\n    return faker.random.arrayElement(faker.definitions.database.engine);\n  };\n\n  self.engine.schema = {\n    \"description\": \"Generates a storage engine.\",\n    \"sampleResults\": [\"MyISAM\", \"InnoDB\"]\n  };\n};\n\nmodule[\"exports\"] = Database;","map":{"version":3,"sources":["/Users/melnychenkovadim/WebstormProjects/dashboard-redisgn/hermes-dashboard-redesign/node_modules/faker/lib/database.js"],"names":["Database","faker","self","column","random","arrayElement","definitions","database","schema","type","collation","engine","module"],"mappings":"AAAA;AACA;AACA;AACA;AACA,IAAIA,QAAQ,GAAG,UAAUC,KAAV,EAAiB;AAC9B,MAAIC,IAAI,GAAG,IAAX;AACA;AACF;AACA;AACA;AACA;;AACEA,EAAAA,IAAI,CAACC,MAAL,GAAc,YAAY;AACxB,WAAOF,KAAK,CAACG,MAAN,CAAaC,YAAb,CAA0BJ,KAAK,CAACK,WAAN,CAAkBC,QAAlB,CAA2BJ,MAArD,CAAP;AACD,GAFD;;AAIAD,EAAAA,IAAI,CAACC,MAAL,CAAYK,MAAZ,GAAqB;AACnB,mBAAe,0BADI;AAEnB,qBAAiB,CAAC,IAAD,EAAO,OAAP,EAAgB,WAAhB;AAFE,GAArB;AAKA;AACF;AACA;AACA;AACA;;AACEN,EAAAA,IAAI,CAACO,IAAL,GAAY,YAAY;AACtB,WAAOR,KAAK,CAACG,MAAN,CAAaC,YAAb,CAA0BJ,KAAK,CAACK,WAAN,CAAkBC,QAAlB,CAA2BE,IAArD,CAAP;AACD,GAFD;;AAIAP,EAAAA,IAAI,CAACO,IAAL,CAAUD,MAAV,GAAmB;AACjB,mBAAe,0BADE;AAEjB,qBAAiB,CAAC,MAAD,EAAS,KAAT,EAAgB,SAAhB,EAA2B,WAA3B;AAFA,GAAnB;AAKA;AACF;AACA;AACA;AACA;;AACEN,EAAAA,IAAI,CAACQ,SAAL,GAAiB,YAAY;AAC3B,WAAOT,KAAK,CAACG,MAAN,CAAaC,YAAb,CAA0BJ,KAAK,CAACK,WAAN,CAAkBC,QAAlB,CAA2BG,SAArD,CAAP;AACD,GAFD;;AAIAR,EAAAA,IAAI,CAACQ,SAAL,CAAeF,MAAf,GAAwB;AACtB,mBAAe,wBADO;AAEtB,qBAAiB,CAAC,iBAAD,EAAoB,UAApB;AAFK,GAAxB;AAKA;AACF;AACA;AACA;AACA;;AACEN,EAAAA,IAAI,CAACS,MAAL,GAAc,YAAY;AACxB,WAAOV,KAAK,CAACG,MAAN,CAAaC,YAAb,CAA0BJ,KAAK,CAACK,WAAN,CAAkBC,QAAlB,CAA2BI,MAArD,CAAP;AACD,GAFD;;AAIAT,EAAAA,IAAI,CAACS,MAAL,CAAYH,MAAZ,GAAqB;AACnB,mBAAe,6BADI;AAEnB,qBAAiB,CAAC,QAAD,EAAW,QAAX;AAFE,GAArB;AAID,CAzDD;;AA2DAI,MAAM,CAAC,SAAD,CAAN,GAAoBZ,QAApB","sourcesContent":["/**\n *\n * @namespace faker.database\n */\nvar Database = function (faker) {\n  var self = this;\n  /**\n   * column\n   *\n   * @method faker.database.column\n   */\n  self.column = function () {\n    return faker.random.arrayElement(faker.definitions.database.column);\n  };\n\n  self.column.schema = {\n    \"description\": \"Generates a column name.\",\n    \"sampleResults\": [\"id\", \"title\", \"createdAt\"]\n  };\n\n  /**\n   * type\n   *\n   * @method faker.database.type\n   */\n  self.type = function () {\n    return faker.random.arrayElement(faker.definitions.database.type);\n  };\n\n  self.type.schema = {\n    \"description\": \"Generates a column type.\",\n    \"sampleResults\": [\"byte\", \"int\", \"varchar\", \"timestamp\"]\n  };\n\n  /**\n   * collation\n   *\n   * @method faker.database.collation\n   */\n  self.collation = function () {\n    return faker.random.arrayElement(faker.definitions.database.collation);\n  };\n\n  self.collation.schema = {\n    \"description\": \"Generates a collation.\",\n    \"sampleResults\": [\"utf8_unicode_ci\", \"utf8_bin\"]\n  };\n\n  /**\n   * engine\n   *\n   * @method faker.database.engine\n   */\n  self.engine = function () {\n    return faker.random.arrayElement(faker.definitions.database.engine);\n  };\n\n  self.engine.schema = {\n    \"description\": \"Generates a storage engine.\",\n    \"sampleResults\": [\"MyISAM\", \"InnoDB\"]\n  };\n};\n\nmodule[\"exports\"] = Database;\n"]},"metadata":{},"sourceType":"script"}