{"ast":null,"code":"var Gen = require('../vendor/mersenne').MersenneTwister19937;\n\nfunction Mersenne() {\n  var gen = new Gen();\n  gen.init_genrand(new Date().getTime() % 1000000000);\n\n  this.rand = function (max, min) {\n    if (max === undefined) {\n      min = 0;\n      max = 32768;\n    }\n\n    return Math.floor(gen.genrand_real2() * (max - min) + min);\n  };\n\n  this.seed = function (S) {\n    if (typeof S != 'number') {\n      throw new Error(\"seed(S) must take numeric argument; is \" + typeof S);\n    }\n\n    gen.init_genrand(S);\n  };\n\n  this.seed_array = function (A) {\n    if (typeof A != 'object') {\n      throw new Error(\"seed_array(A) must take array of numbers; is \" + typeof A);\n    }\n\n    gen.init_by_array(A, A.length);\n  };\n}\n\nmodule.exports = Mersenne;","map":{"version":3,"sources":["/Users/melnychenkovadim/WebstormProjects/dashboard-redisgn/hermes-dashboard-redesign/node_modules/faker/lib/mersenne.js"],"names":["Gen","require","MersenneTwister19937","Mersenne","gen","init_genrand","Date","getTime","rand","max","min","undefined","Math","floor","genrand_real2","seed","S","Error","seed_array","A","init_by_array","length","module","exports"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,oBAAD,CAAP,CAA8BC,oBAAxC;;AAEA,SAASC,QAAT,GAAoB;AAClB,MAAIC,GAAG,GAAG,IAAIJ,GAAJ,EAAV;AACAI,EAAAA,GAAG,CAACC,YAAJ,CAAkB,IAAIC,IAAJ,EAAD,CAAWC,OAAX,KAAuB,UAAxC;;AAEA,OAAKC,IAAL,GAAY,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAC7B,QAAID,GAAG,KAAKE,SAAZ,EACA;AACED,MAAAA,GAAG,GAAG,CAAN;AACAD,MAAAA,GAAG,GAAG,KAAN;AACD;;AACD,WAAOG,IAAI,CAACC,KAAL,CAAWT,GAAG,CAACU,aAAJ,MAAuBL,GAAG,GAAGC,GAA7B,IAAoCA,GAA/C,CAAP;AACD,GAPD;;AAQA,OAAKK,IAAL,GAAY,UAASC,CAAT,EAAY;AACtB,QAAI,OAAOA,CAAP,IAAa,QAAjB,EACA;AACE,YAAM,IAAIC,KAAJ,CAAU,4CAA4C,OAAOD,CAA7D,CAAN;AACD;;AACDZ,IAAAA,GAAG,CAACC,YAAJ,CAAiBW,CAAjB;AACD,GAND;;AAOA,OAAKE,UAAL,GAAkB,UAASC,CAAT,EAAY;AAC5B,QAAI,OAAOA,CAAP,IAAa,QAAjB,EACA;AACE,YAAM,IAAIF,KAAJ,CAAU,kDAAkD,OAAOE,CAAnE,CAAN;AACD;;AACDf,IAAAA,GAAG,CAACgB,aAAJ,CAAkBD,CAAlB,EAAqBA,CAAC,CAACE,MAAvB;AACD,GAND;AAOD;;AAEDC,MAAM,CAACC,OAAP,GAAiBpB,QAAjB","sourcesContent":["var Gen = require('../vendor/mersenne').MersenneTwister19937;\n\nfunction Mersenne() {\n  var gen = new Gen();\n  gen.init_genrand((new Date).getTime() % 1000000000);\n\n  this.rand = function(max, min) {\n    if (max === undefined)\n    {\n      min = 0;\n      max = 32768;\n    }\n    return Math.floor(gen.genrand_real2() * (max - min) + min);\n  }\n  this.seed = function(S) {\n    if (typeof(S) != 'number')\n    {\n      throw new Error(\"seed(S) must take numeric argument; is \" + typeof(S));\n    }\n    gen.init_genrand(S);\n  }\n  this.seed_array = function(A) {\n    if (typeof(A) != 'object')\n    {\n      throw new Error(\"seed_array(A) must take array of numbers; is \" + typeof(A));\n    }\n    gen.init_by_array(A, A.length);\n  }\n}\n\nmodule.exports = Mersenne;\n"]},"metadata":{},"sourceType":"script"}