{"ast":null,"code":"var _jsxFileName = \"/Users/melnychenkovadim/WebstormProjects/dashboard-redisgn/hermes-dashboard-redesign/src/components/UiSelect/UiSelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UiSelect = _ref => {\n  _s();\n\n  let {\n    label,\n    selectedValue,\n    options,\n    placeholder,\n    onChange\n  } = _ref;\n  const selectEl = useRef(null);\n  const [isOptionsOpened, setIsOptionsOpened] = useDetectOutsideClick(selectEl, false);\n\n  const toggleOptionsVisibility = () => setIsOptionsOpened(!isOptionsOpened);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui-input ui-select\",\n    ref: selectEl,\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"ui-input__label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"ui-input__input\",\n      onClick: toggleOptionsVisibility,\n      children: selectedValue ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ui-select__value\",\n        children: selectedValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ui-select__placeholder\",\n        children: placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), isOptionsOpened && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"ui-select__options\",\n      children: options.map(el => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui-select__option\",\n          type: \"button\",\n          onClick: () => onChange(el.value),\n          children: el.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)\n      }, el.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UiSelect, \"/+5bTs1obItTmu8gp/2xsCx5pIo=\", false, function () {\n  return [useDetectOutsideClick];\n});\n\n_c = UiSelect;\nUiSelect.propTypes = {\n  label: PropTypes.string,\n  selectedValue: PropTypes.string,\n  options: PropTypes.array,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func\n};\nexport default UiSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"UiSelect\");","map":{"version":3,"sources":["/Users/melnychenkovadim/WebstormProjects/dashboard-redisgn/hermes-dashboard-redesign/src/components/UiSelect/UiSelect.js"],"names":["React","useRef","PropTypes","useDetectOutsideClick","UiSelect","label","selectedValue","options","placeholder","onChange","selectEl","isOptionsOpened","setIsOptionsOpened","toggleOptionsVisibility","map","el","value","propTypes","string","array","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,qBAAT,QAAsC,mCAAtC;;;AAEA,MAAMC,QAAQ,GAAG,QAA8D;AAAA;;AAAA,MAA7D;AAAEC,IAAAA,KAAF;AAASC,IAAAA,aAAT;AAAwBC,IAAAA,OAAxB;AAAiCC,IAAAA,WAAjC;AAA8CC,IAAAA;AAA9C,GAA6D;AAC7E,QAAMC,QAAQ,GAAGT,MAAM,CAAC,IAAD,CAAvB;AACA,QAAM,CAACU,eAAD,EAAkBC,kBAAlB,IAAwCT,qBAAqB,CACjEO,QADiE,EAEjE,KAFiE,CAAnE;;AAIA,QAAMG,uBAAuB,GAAG,MAAMD,kBAAkB,CAAC,CAACD,eAAF,CAAxD;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAoC,IAAA,GAAG,EAAED,QAAzC;AAAA,eACGL,KAAK,iBAAI;AAAO,MAAA,SAAS,EAAC,iBAAjB;AAAA,gBAAoCA;AAApC;AAAA;AAAA;AAAA;AAAA,YADZ,eAEE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,iBAFZ;AAGE,MAAA,OAAO,EAAEQ,uBAHX;AAAA,gBAKGP,aAAa,gBACZ;AAAM,QAAA,SAAS,EAAC,kBAAhB;AAAA,kBAAoCA;AAApC;AAAA;AAAA;AAAA;AAAA,cADY,gBAGZ;AAAM,QAAA,SAAS,EAAC,wBAAhB;AAAA,kBAA0CE;AAA1C;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,YAFF,EAaGG,eAAe,iBACd;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA,gBACGJ,OAAO,CAACO,GAAR,CAAaC,EAAD,iBACX;AAAA,+BACE;AACE,UAAA,SAAS,EAAC,mBADZ;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,OAAO,EAAE,MAAMN,QAAQ,CAACM,EAAE,CAACC,KAAJ,CAHzB;AAAA,oBAKGD,EAAE,CAACV;AALN;AAAA;AAAA;AAAA;AAAA;AADF,SAASU,EAAE,CAACC,KAAZ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAtCD;;GAAMZ,Q;UAE0CD,qB;;;KAF1CC,Q;AAwCNA,QAAQ,CAACa,SAAT,GAAqB;AACnBZ,EAAAA,KAAK,EAAEH,SAAS,CAACgB,MADE;AAEnBZ,EAAAA,aAAa,EAAEJ,SAAS,CAACgB,MAFN;AAGnBX,EAAAA,OAAO,EAAEL,SAAS,CAACiB,KAHA;AAInBX,EAAAA,WAAW,EAAEN,SAAS,CAACgB,MAJJ;AAKnBT,EAAAA,QAAQ,EAAEP,SAAS,CAACkB;AALD,CAArB;AAQA,eAAehB,QAAf","sourcesContent":["import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDetectOutsideClick } from '../../utils/useDetectOutsideClick';\n\nconst UiSelect = ({ label, selectedValue, options, placeholder, onChange }) => {\n  const selectEl = useRef(null);\n  const [isOptionsOpened, setIsOptionsOpened] = useDetectOutsideClick(\n    selectEl,\n    false,\n  );\n  const toggleOptionsVisibility = () => setIsOptionsOpened(!isOptionsOpened);\n  return (\n    <div className=\"ui-input ui-select\" ref={selectEl}>\n      {label && <label className=\"ui-input__label\">{label}</label>}\n      <button\n        type=\"button\"\n        className=\"ui-input__input\"\n        onClick={toggleOptionsVisibility}\n      >\n        {selectedValue ? (\n          <span className=\"ui-select__value\">{selectedValue}</span>\n        ) : (\n          <span className=\"ui-select__placeholder\">{placeholder}</span>\n        )}\n      </button>\n      {isOptionsOpened && (\n        <ul className=\"ui-select__options\">\n          {options.map((el) => (\n            <li key={el.value}>\n              <button\n                className=\"ui-select__option\"\n                type=\"button\"\n                onClick={() => onChange(el.value)}\n              >\n                {el.label}\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nUiSelect.propTypes = {\n  label: PropTypes.string,\n  selectedValue: PropTypes.string,\n  options: PropTypes.array,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default UiSelect;\n"]},"metadata":{},"sourceType":"module"}