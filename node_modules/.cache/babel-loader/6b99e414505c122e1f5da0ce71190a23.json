{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/objectWithoutPropertiesLoose';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport { SVGInjector } from '@tanem/svg-injector';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react'; // Hat-tip: https://github.com/developit/preact-compat/blob/master/src/index.js#L402.\n\nvar shallowDiffers = function shallowDiffers(a, b) {\n  for (var i in a) {\n    if (!(i in b)) {\n      return true;\n    }\n  }\n\n  for (var _i in b) {\n    if (a[_i] !== b[_i]) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nvar _excluded = [\"afterInjection\", \"beforeInjection\", \"evalScripts\", \"fallback\", \"httpRequestWithCredentials\", \"loading\", \"renumerateIRIElements\", \"src\", \"useRequestCache\", \"wrapper\"];\nvar svgNamespace = 'http://www.w3.org/2000/svg';\nvar xlinkNamespace = 'http://www.w3.org/1999/xlink';\n\nvar ReactSVG = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(ReactSVG, _React$Component);\n\n  function ReactSVG() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.initialState = {\n      hasError: false,\n      isLoading: true\n    };\n    _this.state = _this.initialState;\n    _this._isMounted = false;\n    _this.reactWrapper = void 0;\n    _this.nonReactWrapper = void 0;\n\n    _this.refCallback = function (reactWrapper) {\n      _this.reactWrapper = reactWrapper;\n    };\n\n    return _this;\n  }\n\n  var _proto = ReactSVG.prototype;\n\n  _proto.renderSVG = function renderSVG() {\n    var _this2 = this;\n    /* istanbul ignore else */\n\n\n    if (this.reactWrapper instanceof Node) {\n      var _this$props = this.props,\n          beforeInjection = _this$props.beforeInjection,\n          evalScripts = _this$props.evalScripts,\n          httpRequestWithCredentials = _this$props.httpRequestWithCredentials,\n          renumerateIRIElements = _this$props.renumerateIRIElements,\n          src = _this$props.src,\n          useRequestCache = _this$props.useRequestCache;\n      /* eslint-disable @typescript-eslint/no-non-null-assertion */\n\n      var afterInjection = this.props.afterInjection;\n      var wrapper = this.props.wrapper;\n      /* eslint-enable @typescript-eslint/no-non-null-assertion */\n\n      var nonReactWrapper;\n      var nonReactTarget;\n\n      if (wrapper === 'svg') {\n        nonReactWrapper = document.createElementNS(svgNamespace, wrapper);\n        nonReactWrapper.setAttribute('xmlns', svgNamespace);\n        nonReactWrapper.setAttribute('xmlns:xlink', xlinkNamespace);\n        nonReactTarget = document.createElementNS(svgNamespace, wrapper);\n      } else {\n        nonReactWrapper = document.createElement(wrapper);\n        nonReactTarget = document.createElement(wrapper);\n      }\n\n      nonReactWrapper.appendChild(nonReactTarget);\n      nonReactTarget.dataset.src = src;\n      this.nonReactWrapper = this.reactWrapper.appendChild(nonReactWrapper);\n\n      var afterEach = function afterEach(error, svg) {\n        if (error) {\n          _this2.removeSVG();\n\n          if (!_this2._isMounted) {\n            afterInjection(error);\n            return;\n          }\n        } // TODO (Tane): It'd be better to cleanly unsubscribe from SVGInjector\n        // callbacks instead of tracking a property like this.\n\n\n        if (_this2._isMounted) {\n          _this2.setState(function () {\n            return {\n              hasError: !!error,\n              isLoading: false\n            };\n          }, function () {\n            afterInjection(error, svg);\n          });\n        }\n      };\n\n      SVGInjector(nonReactTarget, {\n        afterEach: afterEach,\n        beforeEach: beforeInjection,\n        cacheRequests: useRequestCache,\n        evalScripts: evalScripts,\n        httpRequestWithCredentials: httpRequestWithCredentials,\n        renumerateIRIElements: renumerateIRIElements\n      });\n    }\n  };\n\n  _proto.removeSVG = function removeSVG() {\n    var _this$nonReactWrapper;\n\n    if ((_this$nonReactWrapper = this.nonReactWrapper) != null && _this$nonReactWrapper.parentNode) {\n      this.nonReactWrapper.parentNode.removeChild(this.nonReactWrapper);\n      this.nonReactWrapper = null;\n    }\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this._isMounted = true;\n    this.renderSVG();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this3 = this;\n\n    if (shallowDiffers(prevProps, this.props)) {\n      this.setState(function () {\n        return _this3.initialState;\n      }, function () {\n        _this3.removeSVG();\n\n        _this3.renderSVG();\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this._isMounted = false;\n    this.removeSVG();\n  };\n\n  _proto.render = function render() {\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    var _this$props2 = this.props;\n    _this$props2.afterInjection;\n    _this$props2.beforeInjection;\n    _this$props2.evalScripts;\n    var Fallback = _this$props2.fallback;\n    _this$props2.httpRequestWithCredentials;\n    var Loading = _this$props2.loading;\n    _this$props2.renumerateIRIElements;\n    _this$props2.src;\n    _this$props2.useRequestCache;\n\n    var wrapper = _this$props2.wrapper,\n        rest = _objectWithoutPropertiesLoose(_this$props2, _excluded);\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n\n    var Wrapper = wrapper;\n    return /*#__PURE__*/React.createElement(Wrapper, _extends({}, rest, {\n      ref: this.refCallback\n    }, wrapper === 'svg' ? {\n      xmlns: svgNamespace,\n      xmlnsXlink: xlinkNamespace\n    } : {}), this.state.isLoading && Loading && /*#__PURE__*/React.createElement(Loading, null), this.state.hasError && Fallback && /*#__PURE__*/React.createElement(Fallback, null));\n  };\n\n  return ReactSVG;\n}(React.Component);\n\nReactSVG.defaultProps = {\n  afterInjection: function afterInjection() {\n    return undefined;\n  },\n  beforeInjection: function beforeInjection() {\n    return undefined;\n  },\n  evalScripts: 'never',\n  fallback: null,\n  httpRequestWithCredentials: false,\n  loading: null,\n  renumerateIRIElements: true,\n  useRequestCache: true,\n  wrapper: 'div'\n};\nReactSVG.propTypes = {\n  afterInjection: PropTypes.func,\n  beforeInjection: PropTypes.func,\n  evalScripts: PropTypes.oneOf(['always', 'once', 'never']),\n  fallback: PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.string]),\n  httpRequestWithCredentials: PropTypes.bool,\n  loading: PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.string]),\n  renumerateIRIElements: PropTypes.bool,\n  src: PropTypes.string.isRequired,\n  useRequestCache: PropTypes.bool,\n  wrapper: PropTypes.oneOf(['div', 'span', 'svg'])\n};\nexport { ReactSVG };","map":{"version":3,"sources":["../compiled/shallow-differs.js","../compiled/ReactSVG.js"],"names":["shallowDiffers","i","a","b","svgNamespace","xlinkNamespace","ReactSVG","React","defaultProps","afterInjection","beforeInjection","evalScripts","fallback","httpRequestWithCredentials","loading","renumerateIRIElements","useRequestCache","wrapper","propTypes","PropTypes","src","hasError","isLoading","renderSVG","nonReactWrapper","document","nonReactTarget","afterEach","SVGInjector","beforeEach","cacheRequests","removeSVG","componentDidMount","componentDidUpdate","componentWillUnmount","render","Fallback","Loading","rest","Wrapper","ref","refCallback","xmlns","xmlnsXlink"],"mappings":"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","sourcesContent":["// Hat-tip: https://github.com/developit/preact-compat/blob/master/src/index.js#L402.\nconst shallowDiffers = (a, b) => {\n    for (const i in a) {\n        if (!(i in b)) {\n            return true;\n        }\n    }\n    for (const i in b) {\n        if (a[i] !== b[i]) {\n            return true;\n        }\n    }\n    return false;\n};\nexport default shallowDiffers;\n","import { SVGInjector } from '@tanem/svg-injector';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport shallowDiffers from './shallow-differs';\nconst svgNamespace = 'http://www.w3.org/2000/svg';\nconst xlinkNamespace = 'http://www.w3.org/1999/xlink';\nexport class ReactSVG extends React.Component {\n    static defaultProps = {\n        afterInjection: () => undefined,\n        beforeInjection: () => undefined,\n        evalScripts: 'never',\n        fallback: null,\n        httpRequestWithCredentials: false,\n        loading: null,\n        renumerateIRIElements: true,\n        useRequestCache: true,\n        wrapper: 'div',\n    };\n    static propTypes = {\n        afterInjection: PropTypes.func,\n        beforeInjection: PropTypes.func,\n        evalScripts: PropTypes.oneOf(['always', 'once', 'never']),\n        fallback: PropTypes.oneOfType([\n            PropTypes.func,\n            PropTypes.object,\n            PropTypes.string,\n        ]),\n        httpRequestWithCredentials: PropTypes.bool,\n        loading: PropTypes.oneOfType([\n            PropTypes.func,\n            PropTypes.object,\n            PropTypes.string,\n        ]),\n        renumerateIRIElements: PropTypes.bool,\n        src: PropTypes.string.isRequired,\n        useRequestCache: PropTypes.bool,\n        wrapper: PropTypes.oneOf(['div', 'span', 'svg']),\n    };\n    initialState = {\n        hasError: false,\n        isLoading: true,\n    };\n    state = this.initialState;\n    _isMounted = false;\n    reactWrapper;\n    nonReactWrapper;\n    refCallback = (reactWrapper) => {\n        this.reactWrapper = reactWrapper;\n    };\n    renderSVG() {\n        /* istanbul ignore else */\n        if (this.reactWrapper instanceof Node) {\n            const { beforeInjection, evalScripts, httpRequestWithCredentials, renumerateIRIElements, src, useRequestCache, } = this.props;\n            /* eslint-disable @typescript-eslint/no-non-null-assertion */\n            const afterInjection = this.props.afterInjection;\n            const wrapper = this.props.wrapper;\n            /* eslint-enable @typescript-eslint/no-non-null-assertion */\n            let nonReactWrapper;\n            let nonReactTarget;\n            if (wrapper === 'svg') {\n                nonReactWrapper = document.createElementNS(svgNamespace, wrapper);\n                nonReactWrapper.setAttribute('xmlns', svgNamespace);\n                nonReactWrapper.setAttribute('xmlns:xlink', xlinkNamespace);\n                nonReactTarget = document.createElementNS(svgNamespace, wrapper);\n            }\n            else {\n                nonReactWrapper = document.createElement(wrapper);\n                nonReactTarget = document.createElement(wrapper);\n            }\n            nonReactWrapper.appendChild(nonReactTarget);\n            nonReactTarget.dataset.src = src;\n            this.nonReactWrapper = this.reactWrapper.appendChild(nonReactWrapper);\n            const afterEach = (error, svg) => {\n                if (error) {\n                    this.removeSVG();\n                    if (!this._isMounted) {\n                        afterInjection(error);\n                        return;\n                    }\n                }\n                // TODO (Tane): It'd be better to cleanly unsubscribe from SVGInjector\n                // callbacks instead of tracking a property like this.\n                if (this._isMounted) {\n                    this.setState(() => ({\n                        hasError: !!error,\n                        isLoading: false,\n                    }), () => {\n                        afterInjection(error, svg);\n                    });\n                }\n            };\n            SVGInjector(nonReactTarget, {\n                afterEach,\n                beforeEach: beforeInjection,\n                cacheRequests: useRequestCache,\n                evalScripts,\n                httpRequestWithCredentials,\n                renumerateIRIElements,\n            });\n        }\n    }\n    removeSVG() {\n        if (this.nonReactWrapper?.parentNode) {\n            this.nonReactWrapper.parentNode.removeChild(this.nonReactWrapper);\n            this.nonReactWrapper = null;\n        }\n    }\n    componentDidMount() {\n        this._isMounted = true;\n        this.renderSVG();\n    }\n    componentDidUpdate(prevProps) {\n        if (shallowDiffers(prevProps, this.props)) {\n            this.setState(() => this.initialState, () => {\n                this.removeSVG();\n                this.renderSVG();\n            });\n        }\n    }\n    componentWillUnmount() {\n        this._isMounted = false;\n        this.removeSVG();\n    }\n    render() {\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        const { afterInjection, beforeInjection, evalScripts, fallback: Fallback, httpRequestWithCredentials, loading: Loading, renumerateIRIElements, src, useRequestCache, wrapper, ...rest } = this.props;\n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const Wrapper = wrapper;\n        return (React.createElement(Wrapper, { ...rest, ref: this.refCallback, ...(wrapper === 'svg'\n                ? {\n                    xmlns: svgNamespace,\n                    xmlnsXlink: xlinkNamespace,\n                }\n                : {}) },\n            this.state.isLoading && Loading && React.createElement(Loading, null),\n            this.state.hasError && Fallback && React.createElement(Fallback, null)));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}